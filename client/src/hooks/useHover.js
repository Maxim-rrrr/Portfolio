import { useState, useEffect, useRef } from "react";

/**
 * https://usehooks.com/useHover/
 * 
 * –û–ø—Ä–µ–¥–µ–ª–∏—Ç–µ, –Ω–∞–≤–æ–¥–∏—Ç –ª–∏ –º—ã—à—å –Ω–∞ —ç–ª–µ–º–µ–Ω—Ç. 
 * –•—É–∫ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Å—ã–ª–∫—É –∏ –ª–æ–≥–∏—á–µ—Å–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ, 
 * —É–∫–∞–∑—ã–≤–∞—é—â–µ–µ, –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç 
 * —ç–ª–µ–º–µ–Ω—Ç —Å —ç—Ç–æ–π —Å—Å—ã–ª–∫–æ–π. –ü—Ä–æ—Å—Ç–æ –¥–æ–±–∞–≤—å—Ç–µ –≤–æ–∑–≤—Ä–∞—â–µ–Ω–Ω—É—é 
 * —Å—Å—ã–ª–∫—É –∫ –ª—é–±–æ–º—É —ç–ª–µ–º–µ–Ω—Ç—É, —Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–∞–≤–µ–¥–µ–Ω–∏—è –∫–æ—Ç–æ—Ä–æ–≥–æ 
 * –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å. –û–¥–Ω–∞ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–∞—è –æ—à–∏–±–∫–∞ —Å 
 * —ç—Ç–∏–º –º–µ—Ç–æ–¥–æ–º : –µ—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –ª–æ–≥–∏–∫–∞, –∫–æ—Ç–æ—Ä–∞—è –∏–∑–º–µ–Ω—è–µ—Ç 
 * hoverRef –¥–æ–±–∞–≤–ª—è–µ–º—ã–π —ç–ª–µ–º–µ–Ω—Ç, —Ç–æ–≥–¥–∞ –≤–∞—à–∏ –ø—Ä–æ—Å–ª—É—à–∏–≤–∞—Ç–µ–ª–∏  
 * —Å–æ–±—ã—Ç–∏–π –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –±—É–¥—É—Ç –ø—Ä–∏–º–µ–Ω—è—Ç—å—Å—è –∫ –Ω–æ–≤–æ–º—É —ç–ª–µ–º–µ–Ω—Ç—É. 
 * –ï—Å–ª–∏ –≤–∞–º –Ω—É–∂–Ω–∞ —ç—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç—Ç—É –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—É—é –≤–µ—Ä—Å–∏—é, 
 * –≤ –∫–æ—Ç–æ—Ä–æ–π –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –æ–±—Ä–∞—Ç–Ω—ã–π –≤—ã–∑–æ–≤ ref.
 */

// // Usage
// function App() {
//     const [hoverRef, isHovered] = useHover();
//     return <div ref={hoverRef}>{isHovered ? "üòÅ" : "‚òπÔ∏è"}</div>;
// }


// Hook
function useHover() {
    const [value, setValue] = useState(false);
    const ref = useRef(null);
    const handleMouseOver = () => setValue(true);
    const handleMouseOut = () => setValue(false);
    useEffect(
        () => {
            const node = ref.current;
            if (node) {
                node.addEventListener("mouseover", handleMouseOver);
                node.addEventListener("mouseout", handleMouseOut);
                return () => {
                node.removeEventListener("mouseover", handleMouseOver);
                node.removeEventListener("mouseout", handleMouseOut);
                };
            }
        },
        [ref.current] // Recall only if ref changes
    );
    return [ref, value];
}

export default useHover