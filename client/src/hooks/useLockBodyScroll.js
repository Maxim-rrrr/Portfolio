import { useState, useLayoutEffect } from "react";

/**
 * https://usehooks.com/useLockBodyScroll
 * 
 * –ò–Ω–æ–≥–¥–∞ –≤—ã —Ö–æ—Ç–∏—Ç–µ, —á—Ç–æ–±—ã –≤–∞—à–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–µ –º–æ–≥–ª–∏ –ø—Ä–æ–∫—Ä—É—á–∏–≤–∞—Ç—å —Ç–µ–ª–æ –≤–∞—à–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã, 
 * –≤ —Ç–æ –≤—Ä–µ–º—è –∫–∞–∫ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –∞–±—Å–æ–ª—é—Ç–Ω–æ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω –Ω–∞–¥ –≤–∞—à–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ–π 
 * (–ø–æ–¥—É–º–∞–π—Ç–µ –æ –º–æ–¥–∞–ª—å–Ω–æ–º –∏–ª–∏ –ø–æ–ª–Ω–æ—ç–∫—Ä–∞–Ω–Ω–æ–º –º–æ–±–∏–ª—å–Ω–æ–º –º–µ–Ω—é). –í–∏–¥–µ—Ç—å –ø—Ä–æ–∫—Ä—É—Ç–∫—É —Ñ–æ–Ω–æ–≤–æ–≥–æ 
 * —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –ø–æ–¥ –º–æ–¥–∞–ª—å–Ω—ã–º –æ–∫–Ω–æ–º –º–æ–∂–µ—Ç —Å–±–∏–≤–∞—Ç—å —Å —Ç–æ–ª–∫—É, –æ—Å–æ–±–µ–Ω–Ω–æ –µ—Å–ª–∏ –≤—ã –Ω–∞–º–µ—Ä–µ–≤–∞–ª–∏—Å—å 
 * –ø—Ä–æ–∫—Ä—É—Ç–∏—Ç—å –æ–±–ª–∞—Å—Ç—å –≤–Ω—É—Ç—Ä–∏ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞. –ß—Ç–æ –∂, —ç—Ç–æ—Ç –∫—Ä—é—á–æ–∫ —Ä–µ—à–∞–µ—Ç —ç—Ç—É –ø—Ä–æ–±–ª–µ–º—É! 
 * –ü—Ä–æ—Å—Ç–æ –≤—ã–∑–æ–≤–∏—Ç–µ –ª–æ–≤—É—à–∫—É useLockBodyScroll –≤ –ª—é–±–æ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–µ, –∏ –ø—Ä–æ–∫—Ä—É—Ç–∫–∞ —Ç–µ–ª–∞ –±—É–¥–µ—Ç 
 * –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞ –¥–æ —Ç–µ—Ö –ø–æ—Ä, –ø–æ–∫–∞ —ç—Ç–æ—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –Ω–µ –±—É–¥–µ—Ç –æ—Ç–∫–ª—é—á–µ–Ω. 
 * –ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –µ–≥–æ –≤ –¥–µ–π—Å—Ç–≤–∏–∏ –≤ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ CodeSandbox .
 */

// // Usage
// function App() {
//   // State for our modal
//   const [modalOpen, setModalOpen] = useState(false);
//   return (
//     <div>
//       <button onClick={() => setModalOpen(true)}>Show Modal</button>
//       <Content />
//       {modalOpen && (
//         <Modal
//           title="Try scrolling"
//           content="I bet you you can't! Muahahaha üòà"
//           onClose={() => setModalOpen(false)}
//         />
//       )}
//     </div>
//   );
// }
// function Modal({ title, content, onClose }) {
//   // Call hook to lock body scroll
//   useLockBodyScroll();
//   return (
//     <div className="modal-overlay" onClick={onClose}>
//       <div className="modal">
//         <h2>{title}</h2>
//         <p>{content}</p>
//       </div>
//     </div>
//   );
// }


// Hook
function useLockBodyScroll() {
  useLayoutEffect(() => {
    // Get original body overflow
    const originalStyle = window.getComputedStyle(document.body).overflow;
    // Prevent scrolling on mount
    document.body.style.overflow = "hidden";
    // Re-enable scrolling when component unmounts
    return () => (document.body.style.overflow = originalStyle);
  }, []); // Empty array ensures effect is only run on mount and unmount
}

export default useLockBodyScroll